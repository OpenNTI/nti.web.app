@import "icons";

@mixin experimental ($rule, $value) {
	#{$rule}: $value;
}

@mixin experimental-value ($rule, $value) {
	#{$rule}: $value;
}

@mixin icon-font() {
	font-family: 'icomoon', serif;
	speak: none;
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin flexContainer() {
	display: -webkit-box;  /* OLD - iOS 6-, Safari 3.1-6, BB7 */
	display: -ms-flexbox;  /* TWEENER - IE 10 */
	display: -webkit-flex; /* NEW - Safari 6.1+. iOS 7.1+, BB10 */
	display: flex;         /* NEW, Spec - Firefox, Chrome, Opera */
}

@mixin flexItem($flex: 0 0 auto) {
	-webkit-box-flex: $flex;
	-webkit-flex: $flex;
	-ms-flex: $flex;
	flex: $flex;
}

@mixin flexBasis($basis: auto) {
	-webkit-flex-basis: $basis;
	-ms-flex-basis: $basis;
	flex-basis: $basis;
}

@mixin blur-effect() {
	filter: url(#blur-effect);//moz
	filter: blur(add = 0, direction = 0, strength = 10);//IE
	body:not(.x-safari) {
		filter: blur(8px);
		-webkit-filter: blur(8px);
	}
}

@mixin loadingSpinner($top:8px, $left: 10px) {
	display: block;
	content: ' ';
	background: {
		image: $loading-indicator;
		size: cover;
		position: center center;
		repeat: no-repeat;
	}

	width: 24px;
	height: 24px;
	position: absolute;
	top: $top;
	left: $left;

	@include animate($name: rotate, $duration: 2s, $delay: 0s, $function: linear, $iteration:infinite);
}

@mixin loadingEllipse($side: after, $animation-delay: 0) {
	&::#{$side} {
		content: '.\a0.\a0.';
		display: inline-block;
		overflow: hidden;
		vertical-align: bottom;

		@include animate($name: loadingellipse, $duration: 0.75s, $delay: $animation-delay, $function: linear, $iteration:infinite);
	}
}

@mixin presence-style {
	width: 7px;
	height: 7px;
	border-radius: 90px;
	background: #747474;

	&.Online,&.online,&.available {
		background: var(--primary-green);
	}
	// &.idle {}

	&.away {
		background: #ebcd25;
	}

	&.DnD,&.dnd {
		background: var(--primary-red);
	}
}

@mixin presence-style-sudo($x:0,$y:0, $xSide:'left', $ySide:'top', $side:'after') {
	&::#{$side} {
		width: 7px;
		height: 7px;
		border-radius: 90px;
		background: #747474;
		content: '';
		position: absolute;
		display: block;
		#{$xSide}: $x;
		#{$ySide}: $y;
	}

	&.Online,&.available {
		&::#{$side} {
			background: var(--primary-green);
		}
	}
	// &.idle {}

	&.away {
		&::#{$side} {
			background: #ebcd25;
		}
	}

	&.DnD,&.dnd {
		&::#{$side} {
			background: var(--primary-red);
		}
	}
}

@mixin accessibility-option($style, $non-accessible, $accessible) {
	@if $accessibility_mode {
		#{$style}: $accessible;
	}

	@else {
		#{$style}: $non-accessible;
	}
}

@mixin icon($name,
$top: 0,
$left: 0,
$right: auto,
$side: 'after',
$position:relative
) {
	@if $position != none {
		position: $position;
	}

	&::#{$side} {
		content: '';
		overflow: hidden;
		top: $top;
		left: $left;
		right: $right;

		@include sprite($name);

		@if $position != none {
			position: absolute;
		}

		@else {
			display: inline-block;
			position: relative;
			margin-right: 0.5em;
		}
	}
}

@mixin ellipse {
	white-space: nowrap;
	text-overflow: ellipsis;
}

@mixin ellipsis {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

@mixin limit-lines ($lines: 2, $line-height: 1.15) {
	max-height: $lines * ($line-height * 1em);
	overflow: hidden;
	text-overflow: ellipsis;

	//Magic non-standard CSS:
	display: -webkit-box;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: $lines;
}

@mixin no-select {
	user-select: none;
}

@mixin allow-select {
	user-select: text;
}

@mixin text-content {
	&, * {
		@include text-pre-wrap;
		@include allow-select;
	}

	cursor: text;

	div {
		@include text-pre-wrap;
	}

	p {
		margin: 0;

		&:empty::before {
			content: ' ';
		}
	}

	em, em strong {
		font-style: italic !important;
	}

	strong, strong em {
		font-weight: bold !important;
	}

	img {
		max-width: 100%;
	}

	img.wb-thumbnail {
		height: auto;
		width: 120px !important;
		display: block;
		clear: both;
		cursor: pointer;
	}

	.whiteboard-wrapper {
		display: inline-block;
		position: relative;
		overflow: hidden;
		cursor: pointer;
		padding: 0;
		margin: 5px 2px;
		border: 1px solid var(--tertiary-grey-alt);
		box-shadow: 2px 3px 1px 0 rgba(0, 0, 0, 0.13);

		&:hover {
			.fill { display: block; }
		}

		.fill {
			display: none;
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			box-shadow: inset 0 0 0 3px white;
			background: rgba(63, 179, 246, 0.05);
		}

		.centerer {
			position: absolute;
			top: 50%;
			left: 50%;

			&, * {
				word-break: normal;
				word-wrap: normal;
				white-space: nowrap;
			}

			.edit {
				font: normal 600 11px/15px var(--body-font-family) !important;
				position: relative;
				top: -15px;
				left: -50%;
				color: #fff;
				background: rgba(0, 0, 0, 0.6);
				padding: 5px 15px 5px 30px;
				border-radius: 90px;

				&::after {
					content: ' ';
					position: absolute;
					top: 5px;
					left: 12px;

					@include sprite($image-edit-14);
				}
			}
		}
	}
}

@mixin highlight-colors($onParentSelector: true, $selector:'', $nibselector:null) {
	$highlight-colors: (
		// (name, menu color, hover, regular color)
		('yellow',var(--highlight-colors-yellow-menu),var(--highlight-colors-yellow-hover),var(--highlight-colors-yellow)),
		('green',var(--highlight-colors-green-menu),var(--highlight-colors-green-hover),var(--highlight-colors-green)),
		('blue',var(--highlight-colors-blue-menu),var(--highlight-colors-blue-hover),var(--highlight-colors-blue))
	);

	$prefix: if($onParentSelector, '&', '');
	$withOutColor: "#{$prefix} #{$selector}";

	@each $item in $highlight-colors {
		$name: nth($item, 1);
		$menu_color: nth($item, 2);
		$hover_color: nth($item, 3);
		$highlight_color: nth($item, 4);

		$withColor: "#{$prefix}.#{$name} #{$selector}";
		$computedSelector: if($name=='blue', $withOutColor, $withColor);

		#{$computedSelector} {
			background-color: $highlight_color;
			transition: all 0.2s;

			&.highlight-mouse-over {
				background-color: $hover_color;
				box-shadow: 0 0 4px rgba(0, 0, 0, 0.4);
			}

			@if ($nibselector) {
				#{$nibselector} {
					border-top-color: $highlight_color;
				}
			}
		}
	}

	#{"#{$prefix}.blackout.blackout #{$selector}"} {
		&,&::selection {
			background: var(--primary-grey);
			color: rgba(0, 0, 0, 0) !important;
			transition: none;
			box-shadow: none !important;

			img,a,a:link, a[href],* {
				visibility: hidden;
			}

			&.highlight-mouse-over {
				background: inherit;
				box-shadow: none !important;

				@if ($nibselector) {
					#{$nibselector} {
						border-top-color: var(--primary-grey);
					}
				}
			}
		}
	}
}

@mixin hardware-accelerate() {
	//@include experimental(transform, translate3d(0, 0, 0));
	//@include experimental(backface-visibility, hidden);
	//@include experimental(perspective, 1000);
}

@mixin fixIEScrollbarGulf() {
	.x-ie & { margin-right: -15px !important; }
}

@mixin scrollbar($track:white,$nib:rgba(0,0,0,0.5),$margin:0) {
	.detected-scrollbars &::-webkit-scrollbar,
	.detected-scrollbars &::-webkit-scrollbar-track {
		width: 8px;
		height: 8px;
		background: $track;
		z-index: 0;
		margin: $margin;
	}

	.detected-scrollbars &::-webkit-scrollbar-thumb {
		background: $nib;
		border: 1px solid $track;
		border-radius: 10px;
	}

	scrollbar-face-color: rgba($nib, 1);
	scrollbar-highlight-color: rgba($nib, 1);
	// scrollbar-3dlight-color: rgba($nib, 1);
	scrollbar-darkshadow-color: rgba($nib, 1);
	scrollbar-shadow-color: rgba($nib, 1);
	scrollbar-arrow-color: rgba($nib, 1);

	@if $track == transparent {
		$track: #fff;
	}

	scrollbar-track-color: $track;
}

@mixin fade-mask() {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0) 78%, #fff 100%);
}

@mixin placeholder-style() {
	font-style: italic !important;
	color: var(--tertiary-grey);
}

@mixin clearfix_left($dist:0) {
	clear: both;
	padding-left: $dist !important;
}

@mixin bottom-etch( $dark: #ebebeb, $light: var(--quad-grey) ) {
	box-shadow: inset 0 -1px 0 0 $dark;
	border: 1px solid $light;
	border-width: 0;
	border-bottom-width: 1px;
}

@mixin top-etch( $dark: #ebebeb, $light: var(--quad-grey) ) {
	box-shadow: inset 0 1px 0 0 $light;
	border-top: 1px solid $dark !important;
}

@mixin side-panel-view-title {
	.view-title {
		color: var(--tertiary-grey);
		font: { size: 30px; style: italic; weight: 300; }

		padding: 20px 18px 15px;
	}
}

@mixin text-box-style {
	background: #fff;
	padding: 5px;
	color: var(--secondary-grey);
	height: 30px;
	font-family: var(--body-font-family);
	//font-size: 15pt;
	width: 100%;
	border-radius: 3px;
	border: 1px solid #a0a0a0;
	box-shadow: inset 2px 2px 6px -2px rgba(0, 0, 0, 0.3);

	$value: background-color 0.5s, color 0.5s;

	@include experimental(transition, $value);

	&.error {
		@include experimental(transition, $value);

		border-color: red;
		background-color: #ffc0c0;
	}

	&.empty,
	&.x-form-empty-field {
		font-style: italic !important;
	}
}

@mixin divider {
	.divider {
		position: relative;
		color: var(--secondary-grey);
		background-color: #f1f1f1;
		font: {
			size: 10px;
			weight: bold;
		}

		text-transform: uppercase;
		line-height: 29px;
		padding-left: 22px;
	}
}

@mixin like-and-favorite {
	.favorite, .like {
		cursor: pointer;
		float: right;
	}

	.like {
		color: var(--primary-blue);
		margin: 8px;
		padding: 0 0 0 20px;
		white-space: nowrap;
		text-overflow: clip;
		-ms-text-overflow: clip;
		height: 16px;
		min-width: 30px;
		line-height: 16px;
		font-size: 10px;
		font-style: italic;
		font-weight: 600;

		@include icon($like,$top:1px, $left:3px);

		&:hover, &.on {
			&::after {
				@include sprite($like_active);
			}
		}
	}

	.favorite {
		margin: -1px 10px 0 0;
		width: 18px;
		height: 24px;

		@include icon($bookmark,$left: 3px);

		&:hover, &.on {
			&::after {
				@include sprite($bookmark_active);
			}
		}
	}

	.favorite-spacer {
		float: right;
		margin: -1px 10px 0 0;
		width: 18px;
		height: 24px;
	}
}

@mixin menu-label-text-treatment {
	color: var(--secondary-grey);
	font-size: 10px;
	font-weight: 600;
	overflow: hidden;
	text-transform: uppercase;

	@include ellipse;
}

@mixin system-link-def {
	color: var(--secondary-grey);
	text-decoration: underline;
	cursor: pointer;
}

@mixin content-link-def {
	color: var(--secondary-grey);

	@include accessibility-option(text-decoration, none, underline);

	cursor: pointer;
	line-height: 1.5em;
}

@mixin text-pre-wrap {
	@include experimental-value(white-space, pre-wrap);

	word-wrap: break-word;      // IE
	word-break: break-word;     // WEBKIT
}

@mixin note-body {
	@include text-pre-wrap;

	a {
		word-wrap: break-word;
	}

	p {
		margin: 0;

		&:empty::before {
			content: ' ';
		}
	}

	strong, em strong {
		font-weight: bold !important;
	}

	em, strong em {
		font-style: italic !important;
	}

	.body-divider .whiteboard-thumbnail {
		width: 240px !important;
		clear: both;
	}

	img:not(.whiteboard-thumbnail) {
		max-width: 95%;
	}
}

@mixin add-to-contacts {
	.add-to-contacts {
		cursor: pointer;
		vertical-align: top;
		color: var(--secondary-grey);
		line-height: 26px;
		font-weight: 700;
		display: inline-block;
		width: auto;
		white-space: nowrap;
		text-align: center;
		padding: 0 12px 0 25px;
		margin-left: 20px;
		margin-top: 4px;
		border: 1px solid #d0d0d0;
		border-radius: 4px;
		opacity: 0.75;
		position: relative;

		&:hover {
			opacity: 1;
		}

		&::after {
			@include sprite($add-contact);

			position: absolute;
			content: ' ';
			top: 5px;
			left: 5px;
		}
	}
}

@mixin data-view {
	background: #fff;
	font: 11px Arial, Helvetica, sans-serif;

	.item-wrap {
		float: left;
		margin: 4px;
		margin-right: 0;
		padding: 5px;
		overflow: hidden;

		@include ellipse;

		span {
			display: block;
			overflow: hidden;

			@include ellipse;

			text-align: center;
			width: 86px; // for ie to ensure that the text is centered
		}

		.item {
			//background: #dddddd;
			padding: 3px;
			padding-bottom: 0;

			img {
				height: 80px;
				width: 80px;
			}

			.x-quirks & {
				padding-bottom: 3px;
				text-align: center;
			}
		}
	}

	.x-item-over {
		border: 1px solid #ddd;
		background: #efefef $data-view-over-bg repeat-x left top;
		padding: 4px;
	}

	.x-item-selected {
		background: #eff5fb $data-view-selected-bg repeat-x right bottom;
		border: 1px solid #99bbe8;
		padding: 4px;

		.item { background: transparent; }
	}
}

@mixin arrow($pointFrom:bottom,$width:7px,$height:4px,$color:var(--primary-grey)) {
	//In Internet Explorer, The"border-style: dashed" will never be
	// rendered unless "(width * 5) >= border-width" is true.
	// Since "width" is set to "0", the "dashed-border" remains
	// invisible to the user, which renders the border just like how
	// "border-color: transparent" renders.
	border-style: dashed;
	border-color: transparent;
	border-width: 0.6em;
	display: -moz-inline-box;
	display: inline-block;
	// Use font-size to control the size of the arrow.
	font-size: $width;
	height: 0;
	line-height: 0;
	width: 0;
	border-#{$pointFrom}-width: $height;
	border-#{$pointFrom}-style: solid;
	border-#{$pointFrom}-color: $color;
}

@mixin grayscale {
	filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); // Firefox 10+
	filter: gray; // IE6-9
	-webkit-filter: grayscale(100%); // Chrome 19+ & Safari 6+
	-webkit-transition: all 0.6s ease; // Fade to color for Chrome and Safari
	-webkit-backface-visibility: hidden; // Fix for transition flickering

	&:hover {
		filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
		-webkit-filter: grayscale(0%);
	}
}

.x-component-nti-tool-action {
	margin: 0 0 0 20px;
	white-space: nowrap;
	position: relative;
	cursor: pointer;
	&.disabled { cursor: default; }

	&:first-of-type { margin: 0; }

	.icon {
		float: left;
		position: relative;
		width: 25px;
		height: 20px;

		&::after {
			content: '';
			left: 0;
			top: 1px;
			position: absolute;
			overflow: hidden;
		}
	}

	.label {
		margin-left: 25px;
		white-space: nowrap;
		font: normal bold 10px/20px var(--body-font-family);
		text-transform: uppercase;
		color: var(--tertiary-grey);
	}

	&:hover,&.over {
		&:not(.disabled) {
			.label { color: var(--secondary-grey); }
		}
	}
}

@mixin flexbox() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

@mixin flex($values) {
	-webkit-box-flex: $values;
	-moz-box-flex: $values;
	-webkit-flex: $values;
	-ms-flex: $values;
	flex: $values;
}

@mixin order($val) {
	-webkit-box-ordinal-group: $val;
	-moz-box-ordinal-group: $val;
	-ms-flex-order: $val;
	-webkit-order: $val;
	order: $val;
}

@mixin containFloats() {
	&::after {
		content: '';
		display: block;
		clear: both;
	}
}
